name: E2E Tests (Auto Fallback Build)

on:
  workflow_dispatch: # Manual trigger from GitHub UI

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: yoga
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ‚òï Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Attempt to download pre-built Angular artifact
      - name: üì• Try Download Angular artifact
        continue-on-error: true
        id: download_front
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: front/dist

      # Attempt to download pre-built backend artifact
      - name: üì• Try Download Backend artifact
        continue-on-error: true
        id: download_back
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: back/target

      # Build Angular if artifact is missing
      - name: üì¶ Install and Build Angular
        if: steps.download_front.outcome == 'failure'
        working-directory: front
        run: |
          npm ci
          npx ng build

      # Build Spring Boot if artifact is missing
      - name: üèóÔ∏è Build Spring Boot app
        if: steps.download_back.outcome == 'failure'
        working-directory: back
        run: mvn clean install -DskipTests

      # Upload Angular artifact if it was built
      - name: ‚¨ÜÔ∏è Upload Angular dist
        if: steps.download_front.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: front/dist

      # Upload backend artifact if it was built
      - name: ‚¨ÜÔ∏è Upload Spring Boot JAR
        if: steps.download_back.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: back/target/*.jar

      # Start backend API
      - name: üöÄ Start backend API
        run: |
          nohup java -jar back/target/*.jar \
            --spring.datasource.url=jdbc:mysql://localhost:3306/yoga \
            --spring.datasource.username=root \
            --spring.datasource.password=root &
          sleep 10

      # Serve Angular frontend
      - name: üöÄ Serve frontend (Angular dist)
        run: |
          npm install -g http-server
          cd front/dist
          folder=$(ls -d */ | head -n 1)
          http-server "$folder" -p 4200 --fallback index.html &
          sleep 5

      # Run Cypress tests (recorded in Cypress Cloud)
      - name: ‚úÖ Cypress run (connected to Cypress Cloud)
        uses: cypress-io/github-action@v6
        with:
          working-directory: front
          wait-on: 'http://localhost:4200'
          browser: chrome
          record: true
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # CYPRESS_BASE_URL: 4200-idx-test59-1744989931195.cluster-c3a7z3wnwzapkx3rfr5kz62dac.cloudworkstations.dev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
