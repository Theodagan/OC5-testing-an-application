name: E2E Tests (Angular + Spring + Cypress)

on:
  workflow_dispatch:
    inputs:
      use-cloud:
        description: "Record to Cypress Cloud?"
        required: false
        default: "false"
        type: choice
        options: ["true", "false"]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: yoga
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      # 📦 Cache Angular node_modules
      - name: 📦 Cache Angular node_modules
        uses: actions/cache@v3
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # ☕ Cache Maven repository
      - name: ☕ Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 📥 Try downloading Spring Boot JAR artifact
      - name: 📥 Try download Spring Boot JAR
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: back/target

      # 📦 Build Angular if needed
      - name: 📦 Install & Build Angular
        working-directory: front
        run: |
          npm ci
          npx ng build

      # ☕ Build Spring Boot app if JAR not found
      - name: ☕ Build Spring Boot JAR (if not downloaded)
        if: steps.spring-boot-jar.outputs.download-path == ''
        working-directory: back
        run: mvn clean install -DskipTests

      # ⬆️ Upload Spring Boot JAR
      - name: ⬆️ Upload Spring Boot JAR
        if: steps.spring-boot-jar.outputs.download-path == ''
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: back/target/*.jar

      # 🚀 Start Spring Boot backend
      - name: 🚀 Start Spring Boot API
        run: |
          nohup java -jar back/target/*.jar \
            --spring.datasource.url=jdbc:mysql://localhost:3306/yoga \
            --spring.datasource.username=root \
            --spring.datasource.password=root &
          sleep 10

      # 🚀 Serve Angular using ng serve to support routing
      - name: 🚀 Serve Angular App (ng serve)
        working-directory: front
        run: |
          npm install -g @angular/cli
          ng serve --host 0.0.0.0 --port 4200 &
          sleep 15

      # ✅ Run Cypress tests
      - name: ✅ Cypress E2E Run
        uses: cypress-io/github-action@v6
        with:
          working-directory: front
          wait-on: 'http://localhost:4200'
          browser: chrome
          headless: true
          record: ${{ github.event.inputs.use-cloud == 'true' }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}